{"version":3,"sources":["../../src/client/index.tsx","../../src/client/video-player.tsx","../../src/components/icons.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport Linkify from \"linkify-react\";\nimport { VideoPlayer } from \"./video-player\";\nimport { ReplyIcon, RecastIcon, LikeIcon, WatchIcon, WarpcastIcon } from \"../components/icons\";\n\ntype CastImage = {\n  type: string;\n  url: string;\n  sourceUrl: string;\n  alt: string;\n};\n\ntype CastVideo = {\n  type: \"video\";\n  url: string;\n  sourceUrl: string;\n  width: number;\n  height: number;\n  duration: number;\n  thumbnailUrl: string;\n};\n\nconst linkifyOptions = {\n  className: \"farcaster-embed-body-link\",\n  target: \"_blank\",\n};\n\nconst getCast = async (username: string, hash: string) => {\n  try {\n    const res = await fetch(\n      `https://client.warpcast.com/v2/user-thread-casts?castHashPrefix=${hash}&username=${username}&limit=5`,\n    );\n    const cast = await res.json();\n\n    // Handle skipping root-embed casts which are empty parents for a cast in a channel.\n    if (cast.result.casts[0].castType === \"root-embed\") {\n      return cast.result.casts[1];\n    }\n\n    return cast.result.casts[0];\n  } catch (e) {\n    throw new Error(\"Unable to fetch cast.\");\n  }\n};\n\n/**\n * Renders a Farcaster embed for a cast. You can use two methods to render a Farcaster embed:\n * 1. Providing a Warpcast URL to a cast (url)\n * 2. Providing a username and hash of a cast (username, hash)\n * @param url Warpcast URL for the cast.\n * @param username Username of the cast author.\n * @param hash Hash of the cast.\n * @returns React JSX Component\n */\nexport function FarcasterEmbed({ url, username, hash }: { url?: string; username?: string; hash?: string }) {\n  const [castData, setCastData] = React.useState<any>(null);\n  // If a URL is provided, parse the username and hash from it.\n  if (url) {\n    const urlParts = url.split(\"/\");\n    username = urlParts[3];\n    hash = urlParts[4];\n  }\n\n  if (!username || !hash) {\n    throw new Error(\"You must provide a Warpcast URL or username and hash to embed a cast.\");\n  }\n\n  React.useEffect(() => {\n    const fetchCast = async () => {\n      const cast = await getCast(username, hash);\n      const author = cast.author;\n      const profileUrl = `https://warpcast.com/~/profiles/${author.fid}`;\n      const publishedAt = new Date(cast.timestamp);\n      const options = {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"2-digit\",\n        hour12: true,\n      } as Intl.DateTimeFormatOptions;\n      const timestamp = publishedAt.toLocaleString(\"en-US\", options);\n      const warpcastUrl = `https://warpcast.com/${author.username}/${cast.hash}`;\n      const replies = cast.replies && cast.replies.count;\n      const likes = cast.reactions && cast.reactions.count;\n      const recasts = cast.combinedRecastCount ? cast.combinedRecastCount : cast.recasts.count;\n      const watches = cast.watches && cast.watches.count;\n      const images = cast.embeds && cast.embeds.images;\n      const hasImages = images && images.length > 0;\n      const hasVideos = cast.embeds && cast.embeds.videos && cast.embeds.videos.length > 0;\n      const videos = cast.embeds && cast.embeds.videos;\n\n      setCastData({\n        cast,\n        author,\n        profileUrl,\n        timestamp,\n        warpcastUrl,\n        replies,\n        likes,\n        recasts,\n        watches,\n        images,\n        hasImages,\n        hasVideos,\n        videos,\n      });\n    };\n\n    fetchCast();\n  }, [username, hash]);\n\n  if (!castData) return null;\n\n  return (\n    <div className=\"not-prose farcaster-embed-container\">\n      <div className=\"farcaster-embed-metadata\">\n        <a href={castData.profileUrl} className=\"farcaster-embed-avatar-link\">\n          <img\n            src={castData.author.pfp.url}\n            alt={`@${castData.author.username}`}\n            width={48}\n            height={48}\n            className=\"farcaster-embed-author-avatar\"\n          />\n        </a>\n        <div className=\"farcaster-embed-author\">\n          <p className=\"farcaster-embed-author-display-name\">{castData.author.displayName}</p>\n          <p className=\"farcaster-embed-author-username\">@{castData.author.username}</p>\n        </div>\n        <div className=\"farcaster-embed-timestamp\">\n          <p>{castData.timestamp}</p>\n        </div>\n      </div>\n      <div className=\"farcaster-embed-body\">\n        <Linkify as=\"p\" options={linkifyOptions}>\n          {castData.cast.text}\n        </Linkify>\n        {castData.hasImages && (\n          <div className=\"farcaster-embed-image-container\">\n            {castData.images.map((image: CastImage) => {\n              return (\n                <a key={image.url} href={image.url} target=\"_blank\" className=\"farcaster-embed-image-link\">\n                  <img src={image.url} alt={image.alt} className=\"farcaster-embed-image\" />\n                </a>\n              );\n            })}\n          </div>\n        )}\n        {castData.hasVideos && (\n          <div className=\"farcaster-embed-video-container\">\n            {castData.videos.map((video: CastVideo) => {\n              return (\n                <VideoPlayer\n                  key={video.url}\n                  source={video.sourceUrl}\n                  aspectRatio={video.width / video.height}\n                  poster={video.thumbnailUrl}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n      {castData.cast.tags.length > 0 && (\n        <div>\n          <div className=\"farcaster-embed-channel\">\n            {castData.cast.tags[0].imageUrl && (\n              <img\n                src={castData.cast.tags[0].imageUrl}\n                alt={castData.cast.tags[0].name}\n                width={16}\n                height={16}\n                className=\"farcaster-embed-channel-avatar\"\n              />\n            )}\n            {castData.cast.tags[0].name && <p className=\"farcaster-embed-channel-name\">{castData.cast.tags[0].name}</p>}\n          </div>\n        </div>\n      )}\n      <div className=\"farcaster-embed-stats\">\n        <ul>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={castData.warpcastUrl} target=\"_blank\">\n              <ReplyIcon />\n              <span>{castData.replies.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={castData.warpcastUrl} target=\"_blank\">\n              <RecastIcon />\n              <span>{castData.recasts.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={castData.warpcastUrl} target=\"_blank\">\n              <LikeIcon />\n              <span>{castData.likes.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={castData.warpcastUrl} target=\"_blank\">\n              <WatchIcon />\n              <span>{castData.watches.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n        </ul>\n        <div className=\"farcaster-embed-warpcast-icon\">\n          <a\n            href={castData.warpcastUrl}\n            title=\"Show on Warpcast\"\n            target=\"_blank\"\n            className=\"farcaster-embed-warpcast-link\"\n          >\n            <WarpcastIcon />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","\"use client\";\nimport React from \"react\";\n\nexport function VideoPlayer({ source, poster, aspectRatio }: { source: string; poster: string; aspectRatio: number }) {\n  const [isMediaChromeLoaded, setIsMediaChromeLoaded] = React.useState(false);\n  const [isHlsVideoElementLoaded, setIsHlsVideoElementLoaded] = React.useState(false);\n\n  const loadScript = (src: string) => {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.type = \"module\";\n      script.onload = () => resolve(script);\n      script.onerror = () => reject(new Error(`[react-farcaster-embed] Script load error for ${src}`));\n      document.head.appendChild(script);\n    });\n  };\n\n  React.useEffect(() => {\n    // URL of the remote script you want to load\n    const mediaChrome = \"https://cdn.jsdelivr.net/npm/media-chrome@1/+esm\";\n    const hlsVideoElement = \"https://cdn.jsdelivr.net/npm/hls-video-element@1.0/+esm\";\n\n    loadScript(mediaChrome)\n      .then(() => {\n        console.log(\"Media Chrome loaded successfully\");\n        setIsMediaChromeLoaded(true);\n      })\n      .catch((error) => {\n        console.error(\"Media Chrome loading failed\", error);\n      });\n\n    loadScript(hlsVideoElement)\n      .then(() => {\n        console.log(\"HLS Video Element loaded successfully\");\n        setIsHlsVideoElementLoaded(true);\n      })\n      .catch((error) => {\n        console.error(\"HLS Video Element loading failed\", error);\n      });\n\n    return () => {\n      document.head.removeChild(document.head.querySelector(`script[src=\"${mediaChrome}\"]`));\n      document.head.removeChild(document.head.querySelector(`script[src=\"${hlsVideoElement}\"]`));\n    };\n  }, [source, poster, aspectRatio]);\n\n  return (\n    <div\n      style={{\n        aspectRatio,\n      }}\n    >\n      {isMediaChromeLoaded && isHlsVideoElementLoaded && (\n        <div\n          className=\"farcaster-embed-video-player\"\n          dangerouslySetInnerHTML={{\n            __html: `<media-controller>\n            <hls-video\n              src=\"${source}\"\n              slot=\"media\"\n              volume=\"1\"\n              crossorigin\n              playsinline\n            ></hls-video>\n            <media-poster-image\n              slot=\"poster\"\n              src=\"${poster}\">\n            </media-poster-image>\n            <media-loading-indicator slot=\"centered-chrome\" noautohide></media-loading-indicator>\n            <media-control-bar>\n              <media-play-button></media-play-button>\n              <media-time-range></media-time-range>\n              <media-time-display showduration remaining></media-time-display>\n              <media-fullscreen-button></media-fullscreen-button>\n            </media-control-bar>\n          </media-controller>`,\n          }}\n        ></div>\n      )}\n    </div>\n  );\n}\n","export const ReplyIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\n  </svg>\n);\n\nexport const RecastIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M17 2.1l4 4-4 4\" />\n    <path d=\"M3 12.2v-2a4 4 0 0 1 4-4h12.8M7 21.9l-4-4 4-4\" />\n    <path d=\"M21 11.8v2a4 4 0 0 1-4 4H4.2\" />\n  </svg>\n);\n\nexport const LikeIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>\n  </svg>\n);\n\nexport const WatchIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n  </svg>\n);\n\nexport const WarpcastIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 1260 1260\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#fc-embed-clip1)\">\n      <path\n        d=\"M947.747 1259.61H311.861C139.901 1259.61 0 1119.72 0 947.752V311.871C0 139.907 139.901 0.00541362 311.861 0.00541362H947.747C1119.71 0.00541362 1259.61 139.907 1259.61 311.871V947.752C1259.61 1119.72 1119.71 1259.61 947.747 1259.61Z\"\n        fill=\"#472A91\"\n      ></path>\n      <path\n        d=\"M826.513 398.633L764.404 631.889L702.093 398.633H558.697L495.789 633.607L433.087 398.633H269.764L421.528 914.36H562.431L629.807 674.876L697.181 914.36H838.388L989.819 398.633H826.513Z\"\n        fill=\"white\"\n      ></path>\n    </g>\n    <defs>\n      <clipPath id=\"fc-embed-clip1\">\n        <rect width=\"1259.61\" height=\"1259.61\" fill=\"white\"></rect>\n      </clipPath>\n    </defs>\n  </svg>\n);\n"],"mappings":"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","names":["React","Linkify","React","jsx","VideoPlayer","source","poster","aspectRatio","isMediaChromeLoaded","setIsMediaChromeLoaded","isHlsVideoElementLoaded","setIsHlsVideoElementLoaded","loadScript","src","resolve","reject","script","mediaChrome","hlsVideoElement","error","jsx","jsxs","ReplyIcon","RecastIcon","LikeIcon","WatchIcon","WarpcastIcon","jsx","jsxs","linkifyOptions","getCast","username","hash","cast","FarcasterEmbed","url","castData","setCastData","React","urlParts","author","profileUrl","publishedAt","options","timestamp","warpcastUrl","replies","likes","recasts","watches","images","hasImages","hasVideos","videos","Linkify","image","video","VideoPlayer","ReplyIcon","RecastIcon","LikeIcon","WatchIcon","WarpcastIcon"]}