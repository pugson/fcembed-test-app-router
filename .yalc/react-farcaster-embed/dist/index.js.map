{"version":3,"sources":["../src/index.tsx","../src/components/video-player.tsx","../src/components/icons.tsx"],"sourcesContent":["import \"server-only\";\nimport Linkify from \"linkify-react\";\nimport { VideoPlayer } from \"./components/video-player\";\nimport { ReplyIcon, RecastIcon, LikeIcon, WatchIcon, WarpcastIcon } from \"./components/icons\";\n\ntype CastImage = {\n  type: string;\n  url: string;\n  sourceUrl: string;\n  alt: string;\n};\n\ntype CastVideo = {\n  type: \"video\";\n  url: string;\n  sourceUrl: string;\n  width: number;\n  height: number;\n  duration: number;\n  thumbnailUrl: string;\n};\n\nconst linkifyOptions = {\n  className: \"farcaster-embed-body-link\",\n  target: \"_blank\",\n};\n\nconst getCast = async (username: string, hash: string) => {\n  try {\n    const res = await fetch(\n      `https://client.warpcast.com/v2/user-thread-casts?castHashPrefix=${hash}&username=${username}&limit=5`,\n    );\n    const cast = await res.json();\n\n    // Handle skipping root-embed casts which are empty parents for a cast in a channel.\n    if (cast.result.casts[0].castType === \"root-embed\") {\n      return cast.result.casts[1];\n    }\n\n    return cast.result.casts[0];\n  } catch (e) {\n    throw new Error(\"Unable to fetch cast.\");\n  }\n};\n\n/**\n * Renders a Farcaster embed for a cast. You can use two methods to render a Farcaster embed:\n * 1. Providing a Warpcast URL to a cast (url)\n * 2. Providing a username and hash of a cast (username, hash)\n * @param url Warpcast URL for the cast.\n * @param username Username of the cast author.\n * @param hash Hash of the cast.\n * @returns React JSX Component\n */\nexport async function FarcasterEmbed({ url, username, hash }: { url?: string; username?: string; hash?: string }) {\n  // If a URL is provided, parse the username and hash from it.\n  if (url) {\n    const urlParts = url.split(\"/\");\n    username = urlParts[3];\n    hash = urlParts[4];\n  }\n\n  if (!username || !hash) {\n    throw new Error(\"You must provide a Warpcast URL or username and hash to embed a cast.\");\n  }\n\n  const cast = await getCast(username, hash);\n  const author = cast.author;\n  const profileUrl = `https://warpcast.com/~/profiles/${author.fid}`;\n  const publishedAt = new Date(cast.timestamp);\n  const options = {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    hour12: true,\n  } as Intl.DateTimeFormatOptions;\n  const timestamp = publishedAt.toLocaleString(\"en-US\", options);\n  const warpcastUrl = `https://warpcast.com/${author.username}/${cast.hash}`;\n  const replies = cast.replies && cast.replies.count;\n  const likes = cast.reactions && cast.reactions.count;\n  const recasts = cast.combinedRecastCount ? cast.combinedRecastCount : cast.recasts.count;\n  const watches = cast.watches && cast.watches.count;\n  const images = cast.embeds && cast.embeds.images;\n  const hasImages = images && images.length > 0;\n  const hasVideos = cast.embeds && cast.embeds.videos && cast.embeds.videos.length > 0;\n  const videos = cast.embeds && cast.embeds.videos;\n\n  return (\n    <div className=\"not-prose farcaster-embed-container\">\n      <div className=\"farcaster-embed-metadata\">\n        <a href={profileUrl} className=\"farcaster-embed-avatar-link\">\n          <img\n            src={author.pfp.url}\n            alt={`@${author.username}`}\n            width={48}\n            height={48}\n            className=\"farcaster-embed-author-avatar\"\n          />\n        </a>\n        <div className=\"farcaster-embed-author\">\n          <p className=\"farcaster-embed-author-display-name\">{author.displayName}</p>\n          <p className=\"farcaster-embed-author-username\">@{author.username}</p>\n        </div>\n        <div className=\"farcaster-embed-timestamp\">\n          <p>{timestamp}</p>\n        </div>\n      </div>\n      <div className=\"farcaster-embed-body\">\n        <Linkify as=\"p\" options={linkifyOptions}>\n          {cast.text}\n        </Linkify>\n        {hasImages && (\n          <div className=\"farcaster-embed-image-container\">\n            {images.map((image: CastImage) => {\n              return (\n                <a key={image.url} href={image.url} target=\"_blank\" className=\"farcaster-embed-image-link\">\n                  <img src={image.url} alt={image.alt} className=\"farcaster-embed-image\" />\n                </a>\n              );\n            })}\n          </div>\n        )}\n        {hasVideos && (\n          <div className=\"farcaster-embed-video-container\">\n            {videos.map((video: CastVideo) => {\n              return (\n                <VideoPlayer\n                  key={video.url}\n                  source={video.sourceUrl}\n                  aspectRatio={video.width / video.height}\n                  poster={video.thumbnailUrl}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n      {cast.tags.length > 0 && (\n        <div>\n          <div className=\"farcaster-embed-channel\">\n            {cast.tags[0].imageUrl && (\n              <img\n                src={cast.tags[0].imageUrl}\n                alt={cast.tags[0].name}\n                width={16}\n                height={16}\n                className=\"farcaster-embed-channel-avatar\"\n              />\n            )}\n            {cast.tags[0].name && <p className=\"farcaster-embed-channel-name\">{cast.tags[0].name}</p>}\n          </div>\n        </div>\n      )}\n      <div className=\"farcaster-embed-stats\">\n        <ul>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={warpcastUrl} target=\"_blank\">\n              <ReplyIcon />\n              <span>{replies.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={warpcastUrl} target=\"_blank\">\n              <RecastIcon />\n              <span>{recasts.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={warpcastUrl} target=\"_blank\">\n              <LikeIcon />\n              <span>{likes.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n          <li>\n            <a className=\"farcaster-embed-stats-link\" href={warpcastUrl} target=\"_blank\">\n              <WatchIcon />\n              <span>{watches.toLocaleString(\"en-US\")}</span>\n            </a>\n          </li>\n        </ul>\n        <div className=\"farcaster-embed-warpcast-icon\">\n          <a href={warpcastUrl} title=\"Show on Warpcast\" target=\"_blank\" className=\"farcaster-embed-warpcast-link\">\n            <WarpcastIcon />\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export function VideoPlayer({ source, poster, aspectRatio }: { source: string; poster: string; aspectRatio: number }) {\n  return (\n    <div\n      style={{\n        aspectRatio,\n      }}\n    >\n      <div\n        className=\"farcaster-embed-video-player\"\n        dangerouslySetInnerHTML={{\n          __html: `<script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/media-chrome@1/+esm\"></script><script type=\"module\" src=\"https://cdn.jsdelivr.net/npm/hls-video-element@1.0/+esm\"></script><media-controller>\n            <hls-video\n              src=\"${source}\"\n              slot=\"media\"\n              volume=\"1\"\n              crossorigin\n              playsinline\n            ></hls-video>\n            <media-poster-image\n              slot=\"poster\"\n              src=\"${poster}\">\n            </media-poster-image>\n            <media-loading-indicator slot=\"centered-chrome\" noautohide></media-loading-indicator>\n            <media-control-bar>\n              <media-play-button></media-play-button>\n              <media-time-range></media-time-range>\n              <media-time-display showduration remaining></media-time-display>\n              <media-fullscreen-button></media-fullscreen-button>\n            </media-control-bar>\n          </media-controller>`,\n        }}\n      ></div>\n    </div>\n  );\n}\n","export const ReplyIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\"></path>\n  </svg>\n);\n\nexport const RecastIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M17 2.1l4 4-4 4\" />\n    <path d=\"M3 12.2v-2a4 4 0 0 1 4-4h12.8M7 21.9l-4-4 4-4\" />\n    <path d=\"M21 11.8v2a4 4 0 0 1-4 4H4.2\" />\n  </svg>\n);\n\nexport const LikeIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path>\n  </svg>\n);\n\nexport const WatchIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"></path>\n    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n  </svg>\n);\n\nexport const WarpcastIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 1260 1260\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#fc-embed-clip1)\">\n      <path\n        d=\"M947.747 1259.61H311.861C139.901 1259.61 0 1119.72 0 947.752V311.871C0 139.907 139.901 0.00541362 311.861 0.00541362H947.747C1119.71 0.00541362 1259.61 139.907 1259.61 311.871V947.752C1259.61 1119.72 1119.71 1259.61 947.747 1259.61Z\"\n        fill=\"#472A91\"\n      ></path>\n      <path\n        d=\"M826.513 398.633L764.404 631.889L702.093 398.633H558.697L495.789 633.607L433.087 398.633H269.764L421.528 914.36H562.431L629.807 674.876L697.181 914.36H838.388L989.819 398.633H826.513Z\"\n        fill=\"white\"\n      ></path>\n    </g>\n    <defs>\n      <clipPath id=\"fc-embed-clip1\">\n        <rect width=\"1259.61\" height=\"1259.61\" fill=\"white\"></rect>\n      </clipPath>\n    </defs>\n  </svg>\n);\n"],"mappings":"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","names":["src_exports","__export","FarcasterEmbed","__toCommonJS","import_server_only","import_linkify_react","import_jsx_runtime","VideoPlayer","source","poster","aspectRatio","import_jsx_runtime","ReplyIcon","RecastIcon","LikeIcon","WatchIcon","WarpcastIcon","import_jsx_runtime","linkifyOptions","getCast","username","hash","cast","FarcasterEmbed","url","urlParts","author","profileUrl","publishedAt","options","timestamp","warpcastUrl","replies","likes","recasts","watches","images","hasImages","hasVideos","videos","Linkify","image","video","VideoPlayer","ReplyIcon","RecastIcon","LikeIcon","WatchIcon","WarpcastIcon"]}